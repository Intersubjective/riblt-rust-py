name: Publish

on:
  workflow_dispatch: 

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Poetry
      run: |
        curl -fsS https://install.python-poetry.org | python - -y
    - name: Update PATH
      if: ${{ runner.os != 'Windows' }}
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Update PATH for Windows
      if: ${{ runner.os == 'Windows' }}
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
    - name: Build
      run: |
        poetry run maturin build --release --out dist --interpreter 3.10 3.11
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  build_sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Poetry
      run: |
        curl -fsS https://install.python-poetry.org | python - -y
    - name: Update PATH
      if: ${{ runner.os != 'Windows' }}
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Update PATH for Windows
      if: ${{ runner.os == 'Windows' }}
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
    - name: Build
      run: |
        poetry run maturin sdist --out dist
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist 
  publish:
    needs: [ build, build_sdist ]
    if: success()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Check distributions
      run: |
        ls -la dist
    - name: Setup Poetry
      run: |
        curl -fsS https://install.python-poetry.org | python - -y
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Publish dry run
      if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish --dry-run
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish
